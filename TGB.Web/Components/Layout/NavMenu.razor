@using TGB.Web.Models
@implements IDisposable

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider asProvider
@inject IHttpContextAccessor httpContextAccessor
@inject GroupBankService gbService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="d-inline-flex">
        <a class="navbar-brand" href="">The Group Bank</a>
        <input type="checkbox" class="toggle-side-menu" title="Collapse side menu" />
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>

                <hr/>
                <div class="d-flex">
                    <div class="nav-item px-3 py-1">
                        <h4 class="text-decoration-underline">Your Banks</h4>
                    </div>

                    <div class="nav-item ms-auto me-3">
                        <NavLink class="btn btn-success btn-sm" href="CreateGroupBank">
                            +
                        </NavLink>
                    </div>
                </div>

                <hr class="mx-3" />

                @if (banks == null)
                {
                    <p><em>Nothing to show...</em></p>
                }
                else
                {
                    <div class="container text-center">
                    @foreach (var bank in banks)
                    {
                        var url = $"Bank/{bank.Name}";
                        var urlNotes = $"Bank/{bank.Name}/Notes";

                            <div class="">
                                <div class="col align-self-center nav-item py-0">
                                    <NavLink class="btn btn-link py-0" href="@url">
                                        <strong class="lead">@bank.Name</strong>
                                    </NavLink>
                                </div>
                            </div>
                            <div class="">
                                <div class="col nav-item py-1">
                                    <NavLink class="btn btn-link py-0" href="@urlNotes">Notes</NavLink>
                                </div>
                            </div>

                        <hr class="mx-5" />
                    }
                    </div>
                }



                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;
    private List<GroupBankVM> banks;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private async Task<List<GroupBankVM>> GetUserBanks()
    {
        List<GroupBankVM> banks = [];

        var user = (await asProvider.GetAuthenticationStateAsync())?.User;
        if (user == null)
        {
            return banks;
        }

        var gbs = await gbService.GetGroupBanksForUser(user);
        banks.AddRange(gbs.Select(gb => new GroupBankVM(gb)));

        return banks;
    }

    protected override async Task OnInitializedAsync()
    {
        banks = await GetUserBanks();
    }
}

