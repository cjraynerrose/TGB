@page "/"
@rendermode InteractiveServer
@using TGB.Domain.Entities
@using TGB.Web.Models
@inject Service service
@inject AuthenticationStateProvider asProvider

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.


<AuthorizeView>
<hr />

        <NavLink class="navlink" href="CreateGroupBank">Create Group Bank</NavLink>

        <p>Here are your banks:</p>

        @if (banks == null)
        {
            <p><em>Nothing to show...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var bank in banks)
                    {
                        <tr>
                            <td>
                                <a href="/Bank/@bank.Name">@bank.Name</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
</AuthorizeView>


@code {

    private List<GroupBankVM> banks;

    private async Task<List<GroupBankVM>> GetUserBanks()
    {
        var user = (await asProvider.GetAuthenticationStateAsync())?.User;
        if(user == null || !user.HasClaim(c => c.Type == TgbClaimTypes.GroupBankUserClaim))
        {
            return null;
        }

        var gbs = await service.GetGroupBanksForUser(user);
        return gbs.Select(gb => new GroupBankVM(gb)).ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        banks = await GetUserBanks();
    }
}